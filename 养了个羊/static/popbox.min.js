function createPopBox(e) {
  let o = {
      title: "提示",
      content: e || "默认内容",
      sure: () => {
        this.close(600);
      },
      cancel: () => {
        this.close(600);
      },
      showCancel: !1,
      closeTime: 0,
      footerAlign: "right",
      isClickModal: !0,
    },
    t = null;
  "object" == typeof e && e && (t = Object.assign(o, e)),
    (this.config = t || o),
    this.renderStyle(this.config),
    this._renderPopBox(this.config);
}
(createPopBox.prototype.$ = function (e, o) {
  return (o = e.indexOf("#") > -1 || "boolean" != typeof o || o)
    ? document.querySelector(e)
    : document.querySelectorAll(e);
}),
  (createPopBox.prototype.create = function (e) {
    return document.createElement(e);
  }),
  (createPopBox.prototype.close = function (e) {
    this.$(".cy-popBox-mask").classList.add("hidden"),
      this.$(".cy-popBox-mask").classList.remove("show");
  }),
  (createPopBox.prototype.renderStyle = function (e) {
    e.footerAlign =
      ["left", "center", "right"].indexOf(e.footerAlign) > -1
        ? e.footerAlign
        : "right";
    const o = this.create("style");
    (o.id = "cy-alert-style"),
      (o.textContent =
        ".cy-popBox-mask {position: fixed;left: 0;right: 0;top: 0;bottom: 0;background-color: rgba(0, 0, 0, 0.6);z-index: 10000;transition:all .6s;}.cy-popBox-mask.show{transform:translateX(0);}.cy-popBox-mask.hidden{transform:translateX(-100%);}.cy-popBox{min-width: 300px;min-height: 80px;background-color: #ffffff;position: absolute;left: 50%;top: 50%;transform: translate(-50%, -50%);border-radius: 5px;}.cy-popBox-title{padding: 8px 9px;font-weight: 500;font-size: 18px;}.cy-popBox-content{padding: 20px;font-size:15px;line-height:25px;}.cy-popBox-content a{color:#665678;font-size:16px;text-decoration:none;cursor:pointer;border-bottom:1px solid #665678;}.cy-popBox-content a:hover{ color:#2396ef;}.cy-popBox-content img{ border-radius:5px;width:auto;height:auto;max-width:1000px;max-height:600px;display:block;margin:1em auto;}.cy-popBox-btnGroup{padding: 8px 10px;text-align:" +
        e.footerAlign +
        ";}.cy-popBox-btnGroup button{outline:none;letter-spacing:2px;display:inline-block;}.cy-btn {line-height: 1;white-space: nowrap;background: #fff;border: 1px solid #dcdfe6;color: #606266;-webkit-appearance: none;transition: 0.1s;font-weight: 500;-moz-user-select: none;-webkit-user-select: none;-ms-user-select: none;padding: 12px 20px;font-size: 14px;border-radius: 4px;cursor: pointer;}.cy-btn-mini {padding: 7px 15px;font-size: 12px;border-radius: 3px;}.cy-btn:hover,.cy-btn:active{color: #57a3f3;background-color: #fff;border-color: #57a3f3;}.cy-btn-primary{color: #fff;background-color: #409eff;border-color: #409eff;}.cy-btn-primary:hover,.cy-btn-primary:active {background: #66b1ff;border-color: #66b1ff;color: #fff;}"),
      this.$("#cy-alert-style")
        ? this.$("head").replaceChild(o, this.$("#cy-alert-style"))
        : this.$("head").appendChild(o);
  }),
  (createPopBox.prototype._renderPopBox = function (e) {
    let o = e.showCancel ? "inline-block" : "none",
      t = e.cancelText ? e.cancelText : "取消",
      n = e.sureText ? e.sureText : "确认",
      i =
        '<div class="cy-popBox-mask hidden"><div class="cy-popBox"><div class="cy-popBox-title">' +
        e.title +
        '</div><div class="cy-popBox-content">' +
        e.content +
        '</div><div class="cy-popBox-btnGroup"><button type="button" class="cy-btn cy-btn-primary" id="popBoxSure">' +
        n +
        '</button><button type="button" class="cy-btn" style="display:' +
        o +
        ';margin-left:25px;" id="popBoxCancel">' +
        t +
        "</button></div></div></div>";
    const r = this.$(".cy-popBox-mask"),
      p = this.create("div");
    (p.id = "container"),
      r
        ? (r.parentElement.removeChild(r), (p.innerHTML += i))
        : (p.innerHTML += i),
      document.body.appendChild(
        p.querySelector(".cy-popBox-mask").cloneNode(!0)
      ),
      setTimeout(() => {
        this.$(".cy-popBox-mask").classList.add("show"),
          this.$(".cy-popBox-mask").classList.remove("hidden");
      }, 100),
      (this.$("#popBoxSure").onclick = (o) => {
        e.sure(this, o);
      }),
      (this.$("#popBoxCancel").onclick = (o) => {
        e.cancel(this, o);
      }),
      e.isClickModal &&
        (this.$(".cy-popBox-mask").onclick = (e) => {
          e.target.className.indexOf("cy-popBox-mask") > -1 && this.close(600);
        });
  }),
  (window.cyConfirm = function (e) {
    return new createPopBox(e);
  });
